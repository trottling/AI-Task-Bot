import json

from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message

from ai_utils.worker import ask_ai
from ics_util.generator import generate_ics
from loader import bot

class TaskCreation(StatesGroup):
    waiting_for_text = State()

async def start_ics_creation(message: Message, state: FSMContext):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞—á–∞–º–∏:")
    await state.set_state(TaskCreation.waiting_for_text)

async def create_ics_command(message: Message, state: FSMContext):
    text = message.text.strip()

    if len(text) < 10:
        await message.answer("–°–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        return

    if len(text) > 500:
        await message.answer("–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        return

    await message.answer("üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–≤–µ–Ω—Ç–∞...")
    await state.clear()

    try:
        resp = await ask_ai(text)
    except Exception as e:
        print(e)
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞")
        return

    if resp == "":
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á: –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")

    try:
        resp = json.loads(resp)
    except Exception as e:
        print(e)
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON")
        return

    if resp["error"] == "":
        await message.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á: {resp['error']}")
        return

    if "events_tasks" not in resp:
        await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á: –≤ JSON –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ 'events_tasks'")
        return

    await message.answer(resp["response"])

    for event_task in resp["events_tasks"]:
        ics_cal = generate_ics(event_task)
        await message.answer(resp["answer"] + ":")
        await send_ics(message.chat.id, ics_cal)


async def send_ics(chat_id, ics_cal):
    await bot.send_document(chat_id, ics_cal)
