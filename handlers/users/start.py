import logging
from aiogram.types import Message

from keyboards.user import user_kb
from loader import ADMINS, db

logger = logging.getLogger(__name__)


async def start_command(message: Message) -> None:
    if message.chat.type != "private":
        chat_id = message.chat.id
        try:
            db.add_chat(chat_id=chat_id, title=message.chat.title or "")
        except Exception:
            logger.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç –≤ –ë–î")

        if not db.has_chat_access(chat_id):
            await message.answer(
                "üö´ –£ —á–∞—Ç–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
            return

        await message.answer("‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —á–∞—Ç–µ")
        return

    full_name = message.from_user.full_name
    telegram_id = message.from_user.id
    try:
        db.add_user(full_name=full_name, telegram_id=telegram_id)
    except Exception:
        logger.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î")

    if telegram_id not in ADMINS and not db.has_access(telegram_id):
        await message.answer(
            "üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        return

    await message.answer(
        text=f"üëã –ü—Ä–∏–≤–µ—Ç, {full_name}, –Ω–∞–∂–º–∏ –ü–æ–º–æ—â—å —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç",
        reply_markup=user_kb,
    )
